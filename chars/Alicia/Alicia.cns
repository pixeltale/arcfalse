[Data]
life = 1300
attack = 100
defence = 100
fall.defence_up = 0
liedown.time = 60
airjuggle = 15
sparkno = 2
guard.sparkno = 40
KO.echo = 0
volume = 0
power = 4000
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = 0.75          ;Horizontal scaling factor.
yscale = 0.75          ;Vertical scaling factor.
ground.back = 15     ;Player width (back, ground)
ground.front = 15    ;Player width (front, ground)
air.back = 6        ;Player width (back, air)
air.front = 18       ;Player width (front, air)
height = 48
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = -5, -90   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y). Recommended 0,0

[Velocity]
walk.fwd  = 2.9     ;Walk forward
walk.back = -2.7     ;Walk backward
run.fwd  = 4.6, 0    ;Run forward (x, y)
run.back = -4.5,-3.8 ;Hop backward (x, y)
jump.neu = 0,-8.3    ;Neutral jumping velocity (x, y)
jump.back = -2.55    ;Jump back Speed (x, y)
jump.fwd = 2.0       ;Jump forward Speed (x, y)
runjump.back = -2,-8.1 ;Running jump speeds (opt)
runjump.fwd = 5,-8.1      ;.
airjump.neu = 0,-8.1      ;.
airjump.back = -2.55
airjump.fwd = 1.5
air.gethit.groundrecover = -.15,-3.5  ;Velocity for ground recovery state (x, y) **MUGEN 1.0**
air.gethit.airrecover.mul = .5,.2     ;Multiplier for air recovery velocity (x, y) **MUGEN 1.0**
air.gethit.airrecover.add = 0,-4.5    ;Velocity offset for air recovery (x, y) **MUGEN 1.0**
air.gethit.airrecover.back = -1       ;Extra x-velocity for holding back during air recovery **MUGEN 1.0**
air.gethit.airrecover.fwd = 0         ;Extra x-velocity for holding forward during air recovery **MUGEN 1.0**
air.gethit.airrecover.up = -2         ;Extra y-velocity for holding up during air recovery **MUGEN 1.0**
air.gethit.airrecover.down = 1.5      ;Extra y-velocity for holding down during air recovery **MUGEN 1.0**

[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 30   ;Minimum distance from ground before you can air jump (opt)
yaccel = .45          ;Vertical acceleration
stand.friction = .9  ;Friction coefficient when standing
crouch.friction = .9 ;Friction coefficient when crouching
stand.friction.threshold = 0.05          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .005       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 25           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 0   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = 3  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = -5      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, -5            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = -4          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

[Constants]
; NegativeStates.cns states
switchAirAttack = 610 ; ANIM: switch air attack.
snapBackAttack = 210 ; ANIM: snapback attack
snapBackHit = 5030 ; this is the ANIMATION used when the char get hit by the snapback attack
StateTagAssistSuper = 1025 ; STATENO: normal assist attack
StateTagAssistHyper = 3000 ; STATENO: Super assist attack, cost 1000 of power.
airDashMax = 2
airJumpCount = 2

;Default language victory quotes (optional).  **MUGEN 1.0**
;If this section is included, the default language victory quotes must be in English.
[Quotes]
victory1 = "Someone like you could never hope to have his fists reach me. Try again in your next life." ;Angous
victory2 = "SPOILER ALERT! TUI DIES IN FIRE HEART!" ;Tui
victory3 = "Britain? Is that some sort of made-up place you call your 'kingdom'? To go to such lengths of fraud to impress...how pathetic..." ;Eddy
victory4 = "If you ever hope to see your brother again, you'll have to go to Fatal Art Reload!" ;One
victory5 = "The brighter the star, the faster they burn out...I'm sure you'll shine wonderfully as you expire." ;Roger
victory6 = "Even the taste of your blood is positively rotten, you truly are worthless. Lower than dog food. Dog shit." ;Vile
victory7 = "Who's your favorite Wu-Tang member? Mine is Ghostface Killah. You seem like an Ol' Dirty Bastard fan. No reason in particular." ;Wu
victory8 = "*wink*" ;Arzon
victory9 = "GYAHAHAHAHAHA!!! You really need to make your suffering less entertaining, one of these days I might go overboard and really kill you!" ;JV
victory10 = "Wow, have my looks improved? I don't remember being so beautiful, but I've really got some killer looks..." ;vs Self
victory11 = "I could shapeshift into you and fuck you in the ass at a medium pace..." ;Sahkive
;victory11 = "You were foolish to think you could- eh? What just fell out of his pocket..? OH MY GOD! MUTHAFUKIN NEWPORTS, NI-" ;Sahkive


;Alternate language victory quotes (optional).
;0 or more alternate language sections may be added, preceded by the
;ISO 639-1 code followed by a ".", e.g. "[ja.Quotes]".
;See language setting in mugen.cfg.
[ja.Quotes]
victory1 = "私は私のベルトで長年の経験を持っています、あなたは知っています。"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 182

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State -3, Win Announcer]
type = PlaySnd
trigger1 = time=0
value = 7410, (0+(Random%2))
;---------------------------------------------------------------------------
; Win pose 2 - Bow
; CNS difficulty: basic
[Statedef 182]
type = S
ctrl = 0
anim = 182
velset = 0,0

[State -3, Win Announcer]
type = PlaySnd
trigger1 = time=0
value = 7410, (0+(Random%2))

[State 8990, AssertSpecial]
type = AssertSpecial
trigger1 = Roundstate > 3
flag = Nobardisplay

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 8990, AssertSpecial]
type = AssertSpecial
trigger1 = RoundState < 3
flag = Nobardisplay

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = A
physics = S
sprpriority = 2

[State 195, 1]
type = changestate
trigger1 = Time = 165
value = 0
ctrl = 1

;==================================================================================================
;=============================================================================


;=============================================================================
[Statedef -2]

;=============================================================================
;Feign Divinity Platform
[State 0, Explod]
type = Explod
triggerall = !numExplod(45)
trigger1 = map(Float)
anim = 45
ID = 45
pos = 0,0
postype = p1 
scale = const(size.xscale),const(size.yscale)
removeongethit = 1

;Feign Divinity End
[State Float]
type 		= mapset
trigger1 		= pos y >= 0 || map(FloatTimer) >= 300
map 		= "Float"
value 		= 0
;Float Limiter - Timer Exceeded, Float Lockout
[State Float]
type 		= MapSet
trigger1 		= map(FloatTimer) >= 299
map 		= "CanFloat"
value 		= 0
;Float Limiter - Hit ground, float reset
[State Float]
type 		= MapSet
trigger1 		= pos y >= 0
map 		= "CanFloat"
value 		= 1
[State Float]
type 		= MapAdd
trigger1 		= map(Float) > 0
map 		= "FloatTimer"
value 		= 1
[State Float]
type 		= mapSet
trigger1 		= !map(Float)
map 		= "FloatTimer"
value 		= 0

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = map(Float)
statetype = A

;=============================================================================



;=============================================================================
;Airdash Limiter Reset
[State Limiter]
type = MapSet
trigger1 = pos y >= 0
map = "ADashUse"
value = 0
;=============================================================================


[State -2, Debug]
type = DisplayToClipboard
trigger1 = 1
text = "Float = %f untechMod = %f upcheck = %f"
params = map(Float), map(untechMOD), map(doubleJump_bufffix)

[Statedef -4]

[State -2, Up Detector]
type 		= MapSet
trigger1 		= command != "up" && command != "holdup"
map 		= "doubleJump_BUFFFIX"
value 		= 0
ignorehitpause 	= 1
[State -2, Up Detector]
type 		= MapAdd
trigger1 		= command = "up"
map 		= "doubleJump_BUFFFIX"
value 		= 1
ignorehitpause 	= 1

[State -2, FRC]
type 		= MapSet
trigger1 		= !time
map 		= "FRC"
value 		= 0
ignorehitpause 	= 1
persistent		= 1